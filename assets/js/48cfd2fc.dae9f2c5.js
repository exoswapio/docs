"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8973],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(r),g=o,m=u["".concat(p,".").concat(g)]||u[g]||d[g]||a;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},3643:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={id:"glossary",title:"Glossary",description:"Build your next blockchain app with Exoswap.",keywords:["docs","exoswap","stratos"],image:"https://raw.githubusercontent.com/stratosnet/token-lists/master/logo.svg"},s=void 0,i={unversionedId:"bridge/glossary",id:"bridge/glossary",title:"Glossary",description:"Build your next blockchain app with Exoswap.",source:"@site/docs/bridge/glossary.md",sourceDirName:"bridge",slug:"/bridge/glossary",permalink:"/docs/bridge/glossary",draft:!1,editUrl:"https://github.com/exoswapio/docs/tree/master/docs/bridge/glossary.md",tags:[],version:"current",frontMatter:{id:"glossary",title:"Glossary",description:"Build your next blockchain app with Exoswap.",keywords:["docs","exoswap","stratos"],image:"https://raw.githubusercontent.com/stratosnet/token-lists/master/logo.svg"},sidebar:"bridge",previous:{title:"Overview",permalink:"/docs/bridge/architecture"},next:{title:"Bridge Token",permalink:"/docs/bridge/contracts/bridge-token"}},p={},c=[],l={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"SAO")," - semi-decentralized autonomous organisation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EOA")," - Externally Owned Account, briefly normal ethereum account"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Native token")," - the token, which is the main currency of some blockchain (like STOS, BNB, ETH)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Mintable token")," - the token, which is already exists on some chain and should be replicated on another;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Mint")," - process of exoswap token creation;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Burn")," - process of exoswap token deletion;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Lock")," - process to hold the amount of donored tokens in the bridge in order to make future exoswap tokens;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Unlock")," - process to release the amount of donored tokens in the bridge;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Enter")," - the starting point of bridge execution to lock/burn tokens;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exit")," - the end point of bridge execution to unlock/mint tokens;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Cosigner")," - participant of fraud detection and proof creation for bridge exit process;"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Verifier group")," - group of cosigners that applied more than 66% of votes"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Orchestrator")," - in terms of bridge, the main bridge which connects different networks"))}d.isMDXComponent=!0}}]);